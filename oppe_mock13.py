# -*- coding: utf-8 -*-
"""oppe_mock13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x7_M042zwV55DlTaoCavvHK0c0t9-2UP
"""

def most_freq(M):
    m = len(M)
    n = len(M[0])
    freq = dict()

    for r in range(m):
        for c in range(n):
            if M[r][c] not in freq:
                freq[M[r][c]] = 1
            else:
                freq[M[r][c]] += 1
    max = 0
    ans = -999
    for num in freq:
        if freq[num] >= max and num > ans:
            max = freq[num]
            ans = num
    return ans
M = [[1, 1, 2, 2], [3, 3, 4, 4], [5, 5, 6, 6], [7, 7, 9, 9]]
most_freq(M)

def most_freq(M):
    """
    Compute most frequently used digit
    Argument:
        M: matrix, list of lists
    Return:
        digit: most frequently occuring digit
    """
    m, n = len(M), len(M[0])
    D = {x: 0 for x in range(0, 10)}
    for i in range(m):
        for j in range(n):
            D[M[i][j]] += 1
    
    mval, mfreq = 0, D[0]
    for x in D:
        if D[x] >= mfreq:
            mval, mfreq = x, D[x]
    
    return mval