# -*- coding: utf-8 -*-
"""w4grpa3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U6VeRSn04lH8PvN_tjezT9aZjTX2ZvvA
"""

n = int(input())
def input_square_matrix(n):

    matrix = []
    l = []

    for i in range(n):
        l =[]
        int_l = []

        l = input().split(',')
        for num in l:
            int_l.append(int(num))
        matrix.append(int_l)

    return matrix

A = input_square_matrix(n)
B = input_square_matrix(n)
#print(A,B)

def zero_sqr_matrix(n):
  zero_matrix = []
  l = []
  for i in range(n):
    l =[]
    for j in range(n):
      l.append(0)
    zero_matrix.append(l)

  return zero_matrix




def matrixproduct(A,B):

    product = zero_sqr_matrix(n)
    for i in range(n):
        for j in range(n):
            for s in range(n):
                product[i][j] += A[i][s] * B[s][j]

    return product

AB = matrixproduct(A,B)
#print(AB)

for i in range(len(AB)):
  for j in range(len(AB[0])):
    if j == (len(AB[0])-1):
      print(AB[i][j])
    else:
      print(AB[i][j], end = ',')