# -*- coding: utf-8 -*-
"""w10grpa2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x7_M042zwV55DlTaoCavvHK0c0t9-2UP
"""

class StringManipulation():
    def __init__(self,words):
        self.words = words

    def total_words(self):
        return len(self.words)

    def count(self,query):
        c = 0
        for w in self.words:
            if w == query:
                c += 1
        return c

    def words_of_length(self, length):
        l = []
        for w in self.words:
            if len(w) == length:
                l.append(w)
        return l

    def words_start_with(self,char):
        l = []
        for w in self.words:
            if w[0] == char:
                l.append(w)
        return l

    def longest_word(self):
        max = 0
        max_word = ''
        for w in self.words:
            if len(w) > max:
                max = len(w)
                max_word = w
        return max_word

    def palindromes(self):
        def pal(word):
            if len(word) == 1:
                return True

            if len(word) == 2:
                if word[0] == word[1]:
                    return True
                else:
                    return False
            if len(word) > 2:
                if word[0] != word[-1]:
                    return False
                else:
                    return pal(word[1:-1])
        l = []
        for w in self.words:
            
            if pal(w) == True:
                l.append(w)
        return l