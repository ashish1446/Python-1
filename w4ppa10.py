# -*- coding: utf-8 -*-
"""w4ppa10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U6VeRSn04lH8PvN_tjezT9aZjTX2ZvvA
"""

n = int(input())
def input_square_matrix(n):
  matrix = []
  l = []

  for i in range(n):
    l =[]
    int_l = []

    l = input().split(',')
    for num in l:
      int_l.append(int(num))
    matrix.append(int_l)

  return matrix

A = input_square_matrix(n)
B = input_square_matrix(n)
#print(A)
#print(B)


def zero_sqr_matrix(n):
  zero_matrix = []
  l = []
  for i in range(n):
    l =[]
    for j in range(n):
      l.append(0)
    zero_matrix.append(l)

  return zero_matrix

#p = zero_sqr_matrix(n)
#print(p)


def sum_2_matrices(A,B):
  zum = zero_sqr_matrix(n)
  
  for i in range(len(zum)):
    
    for j in range(len(zum[0])):
      zum[i][j] = A[i][j] + B[i][j]
    
  return zum

sum = sum_2_matrices(A,B)

for i in range(len(sum)):
  for j in range(len(sum[0])):
    if j == (len(sum[0])-1):
      print(sum[i][j])
    else:
      print(sum[i][j], end = ',')

def zero_sqr_matrix(n):
  zero_matrix = []
  l = []
  for i in range(n):
    l =[]
    for j in range(n):
      l.append(0)
    zero_matrix.append(l)

  return zero_matrix
p=zero_sqr_matrix(4)
p[1][2] = 3
print(p)